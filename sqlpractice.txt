SQL Practice:

1.
Given the following data definition.

TABLE students
   id INTEGER PRIMARY KEY,
   firstName VARCHAR(30) NOT NULL,
   lastName VARCHAR(30) NOT NULL

points: 1
Write a query that returns the number of students whose first name is John.

SELECT Count(*) FROM students WHERE firstName = 'John'

2.
Each item in a web shop belongs to a seller. To ensure service quality, each seller has a rating.

The data are kept in the following two tables:

TABLE sellers
  id INTEGER PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  rating INTEGER NOT NULL

TABLE items
  id INTEGER PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  sellerId INTEGER REFERENCES sellers(id)

Write a query that selects the item name and the name of its seller for each item that belongs to a seller with a rating greater than 4.

SELECT i.Name AS ItemName, s.Name AS SellerName FROM items AS i
JOIN sellers AS s ON i.sellerId = s.id
WHERE s.rating > 4

Points: 2
3.
Information about pets is kept in two separate tables:

TABLE dogs
  id INTEGER NOT NULL PRIMARY KEY,
  name VARCHAR(50) NOT NULL

TABLE cats
  id INTEGER NOT NULL PRIMARY KEY,
  name VARCHAR(50) NOT NULL

Write a query that select all distinct pet names.

SELECT DISTINCT(name)
FROM dogs
UNION
SELECT DISTINCT(name)
FROM cats


Points: 2
4.
A table containing the students enrolled in a yearly course has incorrect data in records with ids between 20 and 100 (inclusive).

TABLE enrollments
  id INTEGER NOT NULL PRIMARY KEY
  year INTEGER NOT NULL
  studentId INTEGER NOT NULL

Write a query that updates the field 'year' of every faulty record to 2015.

UPDATE enrollments
SET year = 2015
WHERE (id BETWEEN 20 and 100)


Points: 3
5.
Each item in a web shop belongs to a seller. To ensure service quality, each seller has a rating.

The data are kept in the following two tables:

TABLE sellers
  id INTEGER PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  rating INTEGER NOT NULL

TABLE items
  id INTEGER PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  sellerId INTEGER REFERENCES sellers(id)
Write a query that selects the item name and the name of its seller for each item that belongs to a seller with a rating greater than 4.

Points: 3

SELECT i.Name AS ItemName, s.Name AS SellerName FROM items AS i
JOIN sellers AS s ON i.sellerId = s.id
WHERE s.rating > 4
